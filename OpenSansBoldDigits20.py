# Code generated by font_to_py.py.
# Font: OpenSans-Bold.ttf
# Cmd: font_to_py.py OpenSans-Bold.ttf 20 OpenSansBoldDigits20.py -s 48 -l 57
version = '0.33'

def height():
    return 19

def baseline():
    return 19

def max_width():
    return 15

def hmap():
    return False

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 48

def max_ch():
    return 57

_font =\
b'\x0d\x00\x02\x00\x00\x0e\x00\x00\x0e\x00\x00\x07\x00\x03\x07\x8e'\
b'\x07\x07\x8f\x07\x87\x8f\x07\xc7\x03\x03\xef\x01\x00\xfe\x01\x00'\
b'\xfe\x00\x00\x7c\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\xe0\x3f'\
b'\x00\xfc\xff\x00\xfe\xff\x03\xfe\xff\x03\x1f\xc0\x07\x07\x00\x07'\
b'\x07\x00\x07\x07\x00\x07\x1f\xc0\x07\xfe\xff\x03\xfe\xff\x03\xf8'\
b'\xff\x01\xe0\x3f\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00'\
b'\x30\x00\x00\x78\x00\x00\x3c\x00\x00\x3c\x00\x00\x1e\x00\x00\xff'\
b'\xff\x07\xff\xff\x07\xff\xff\x07\xff\xff\x07\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x04\x00\x07\x0e'\
b'\x80\x07\x1e\xc0\x07\x0f\xe0\x07\x07\xf0\x07\x07\x78\x07\x07\x3c'\
b'\x07\x07\x1f\x07\xdf\x0f\x07\xfe\x07\x07\xfe\x03\x07\xfc\x01\x07'\
b'\x30\x00\x07\x00\x00\x00\x0f\x00\x00\x00\x00\x02\x80\x03\x0e\x80'\
b'\x07\x0e\x00\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07'\
b'\x87\x87\x07\xff\xcf\x07\xfe\xfd\x03\xfe\xfc\x03\x7c\xfc\x01\x00'\
b'\xf0\x00\x00\x00\x00\x0f\x00\x00\x70\x00\x00\x78\x00\x00\x7e\x00'\
b'\x00\x7f\x00\xc0\x77\x00\xe0\x73\x00\xf8\x70\x00\x7c\x70\x00\xdf'\
b'\xff\x07\xff\xff\x07\xff\xff\x07\xff\xff\x07\x00\x70\x00\x00\x70'\
b'\x00\x00\x70\x00\x0f\x00\x00\x00\x00\x00\x80\x03\xff\x83\x07\xff'\
b'\x03\x07\xff\x03\x07\xff\x03\x07\x87\x03\x07\x87\x03\x07\x87\x87'\
b'\x07\x87\xcf\x07\x87\xff\x03\x07\xff\x03\x07\xfe\x01\x00\x78\x00'\
b'\x00\x00\x00\x0f\x00\x00\x00\x00\xc0\x7f\x00\xf0\xff\x01\xfc\xff'\
b'\x03\xfc\xff\x03\x3e\x87\x07\x0e\x03\x07\x8f\x03\x07\x87\x03\x07'\
b'\x87\x87\x07\x87\xff\x07\x07\xff\x03\x07\xff\x01\x00\xfc\x00\x00'\
b'\x00\x00\x0f\x00\x00\x00\x00\x07\x00\x00\x07\x00\x00\x07\x00\x04'\
b'\x07\x80\x07\x07\xe0\x07\x07\xf8\x07\x07\xff\x03\xc7\xff\x00\xf7'\
b'\x1f\x00\xff\x07\x00\xff\x01\x00\x3f\x00\x00\x0f\x00\x00\x00\x00'\
b'\x00\x0f\x00\x00\x00\x00\x10\xf0\x00\x7c\xfc\x03\xfe\xfc\x03\xfe'\
b'\xff\x07\xcf\x8f\x07\x87\x07\x07\x87\x07\x07\x87\x07\x07\xcf\x8f'\
b'\x07\xff\xff\x07\xfe\xfc\x03\x7c\xf8\x01\x10\xf0\x00\x00\x00\x00'\
b'\x0f\x00\x00\x00\x00\xf8\x01\x00\xfc\x07\x07\xfe\x07\x07\xff\x0f'\
b'\x07\x0f\x0f\x07\x07\x0e\x07\x07\x8e\x07\x07\x86\x03\x0f\xe7\x03'\
b'\xfe\xff\x01\xfe\xff\x01\xfc\x7f\x00\xf0\x1f\x00\x00\x00\x00'

_index =\
b'\x00\x00\x29\x00\x58\x00\x87\x00\xb6\x00\xe5\x00\x14\x01\x43\x01'\
b'\x72\x01\xa1\x01\xd0\x01\xff\x01'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 48 + 1) if oc >= 48 and oc <= 57 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((19 - 1)//8 + 1) * width
    return _mvfont[doff + 2:next_offs], 19, width
 
